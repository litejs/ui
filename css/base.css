
/**
 *  1. Do not adjusts the text size automatically.
 *     IE Phone note - If the viewport is set using <meta> element,
 *     the value of the CSS text-size-adjust property is ignored.
 *     Webkit bug - If -webkit-text-size-adjust is explicitely set to none,
 *     Webkit-based desktop browsers, like Chrome or Safari,
 *     instead of ignoring the property, will prevent the user to zoom in or out the Web page.
 *     See Bug 56543, Bug 163359, and Bug 84186.
 *  2. IE for Windows Phone 8.1 supports "-webkit-text-size-adjust" as an alias for "-ms-text-size-adjust".
 *  3. 62.5% brings standard font size so that 1em = 10px.
 *     This is because the default size for ‘medium’ text in all modern browsers is 16px.
 */

html {
	-webkit-text-size-adjust: 100%;       /* 1 */
	    -ms-text-size-adjust: 100%;       /* 2 */
	-webkit-font-smoothing: antialiased;
	font-size: 62.5%;                     /* 3 */
	line-height: 1.62;
}

.max-height {
	height: auto !important;
	height: 100%;
	min-height: 100%;
}

html,
body,
form,
img,
.reset {
	margin: 0;
	padding: 0;
	border: 0;
	outline: 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	margin: 0;
	padding: 1em 0 .5em 0;
	font-weight: normal;
	font-family: georgia, serif;
	font-style: italic;
}

a {
	color: inherit;
	text-decoration: none;
}

/**
 *  1. Alternate cursor for IE
 *  2. Fixes extra padding issue in IE6/7
 *  3. Firefox default is: b, strong { font-weight: bolder; }
 *     and it does not render well with some fonts (Helvetica Neue on macs for example).
 */

a,
button,
.hand {
	cursor: pointer;
	*cursor: hand;       /* 1 */
}

button {
	width: auto;         /* 2 */
	overflow: visible;   /* 2 */
}

b,
strong,
th {
	font-weight: bold;   /* 3 */
}

audio,
button,
canvas,
iframe,
img,
input,
select,
svg,
video {
	vertical-align: middle;
	/*
	 * Use W3C Box Model by default for IE6-7
	 * Traditional Box Model box-sizing: border-box;
	 *
	 * meter and progress tag is border-box by default in webkit
	 */
	-webkit-box-sizing: content-box; /* Chrome4+, Safary3.1+ */
	   -moz-box-sizing: content-box; /* Firefox */
	        box-sizing: content-box; /* IE8+, Chrome10+, Safary5+, Opera8.5+ */
}

/* tables still need cellspacing="0" in the markup */
table {
	border-collapse: collapse;
	border-spacing: 0;
}

textarea {
	resize: vertical;
}

/**
 * Restores the normal text size
 * @see http://code.stephenmorley.org/html-and-css/fixing-browsers-broken-monospace-font-handling/
 */
code,
kbd,
pre,
samp {
	font-family: monospace, monospace;
	font-size: 1em;
}

/**
 * Mobile Safari respect the EXIF orientation tag by default in HTML documents.
 *
 * image-orientation property is supported by Firefox 26.
 * When the style image-orientation: from-image is applied to a JPEG image, the browser will take its EXIF orientation tag into account when performing layout and rendering.
 *
 * image-orientation: 270deg flip;
 *
 * When you specify an orientation manually, image-orientation gives CSS the same capabilities as the EXIF orientation tag.
 * You can use this to manually correct JPEGs lacking EXIF data, or to reorient PNGs and other types of images that can’t include orientation information.
 * @see http://sethfowler.org/blog/2013/09/13/new-in-firefox-26-css-image-orientation/
 *
 */
img {
	image-orientation: from-image; /* 1 */
}

/*
 * Most browsers don't print background images by default.
 * Use foreground images as sprites
 */

button,
[draggable=true],
.noselect {
	-webkit-user-select: none;
	 -khtml-user-select: none;
	   -moz-user-select: none;
	     -o-user-select: none;
	        user-select: none;
}

/* Prevent the text contents of draggable elements from being selectable. */
[draggable=true] {
	-webkit-user-drag: element;
	 -khtml-user-drag: element;
}

/* for IE8 */
:focus {
	outline: none;
}

/* for FireFox */
::-moz-focus-inner {
	border: 0;
	padding: 0;
}


/*
global classes
*/
.hide {
	display: none;
	visibility: hidden;
}
.transparent {
	opacity:0 !important;
	filter: alpha(opacity=0) !important;
}
.max {
	width: 100%;
	height: 100%;
	overflow: hidden;
}
.abs {
	position: absolute;
	top: 0px;
	left: 0px;
}
.absr {
	position: absolute;
	top: 0px;
	right: 0px;
}
.rel {
	position: relative;
	height: 100%;
}
.nowrap {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

/* for slider knob */
.anim {
	-webkit-transition: all 0.3s ease-out;
	     -moz-transition: all 0.3s ease-out;
	       -o-transition: all 0.3s ease-out;
	          transition: all 0.3s ease-out;

	-webkit-transform: translate3d(0, 0, 0); /* for remove first flicker on iphone */
}





/*
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    contenteditable attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that are clearfixed.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 *
 * THANKS: Nicolas Gallagher - micro clearfix http://nicolasgallagher.com/micro-clearfix-hack/
 */
.cf:before,
.cf:after {
	content: " ";   /* 1 */
	display: table; /* 2 */
}
.cf:after {
	clear: both;
}
/* Trigger hasLayout and contain floats in IE 6/7 */
.cf {
	*zoom: 1;
	clear: both;
}
/* you could use the overflow method, but it’s not universally ideal */



